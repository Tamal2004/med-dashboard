type Client @model {
  id: ID!
  name: String!
  createdBy: String
  projects: [Project] @connection(name: "ClientProjects")
}

type Project @model {
  id: ID!
  reference: String!
  title: String!
  status: String
  client: Client! @connection(name: "ClientProjects")
  principalContact: String!
  otherContact: String
  testingDate: AWSDate!
  cost: String
  purchaseOrderNumber: String
  manager: String!
  testerFacilitator: String
  clientFacilitator: String
  mainRecruiter: String
  facilities: [String!]
  screenerApproved: AWSDate
  facilitationGuideSent: AWSDate
  testerProfilesSent: AWSDate
  facilitationGuideApproved: AWSDate
  testerProfilesApproved: AWSDate
  sessionDetailsSent: AWSDate
  attendees: String
  reportSent: AWSDate
  feedbackEntered: AWSDate
  videosUploaded: AWSDate
  invoiced: AWSDate
  invoiceNumber: String
  clientComments: String
  wuComments: String
  profiles: [String]
  sessions: [Session] @connection(name: "ProjectSessions")
  contactNotes: [ContactNote] @connection(name: "ProjectContactNotes")
}

type Session @model {
  id: ID!
  project: Project! @connection(name: "ProjectSessions")
  tester: Tester! @connection(name: "TesterSessions")
  profile: String!
  location: String!
  date: AWSDate!
  time: AWSTime!
  notes: String
}

type Tester @model {
  id: ID!
  title: String!
  firstName: String!
  surname: String!
  email: AWSEmail!
  phone: String!
  address: String
  house: String
  street: String
  town: String
  county: String
  postcode: String
  country: String
  gender: String!
  dob: AWSDate!
  maritalStatus: String!
  hasChildren: Boolean
  nationality: String!
  ethnicity: String!
  firstLanguage: String!
  otherLanguages: String
  disability: String
  about: String!
  employmentStatus: String!
  jobTitle: String
  businessName: String
  employmentSector: String
  employeeCount: String
  subject: String
  educationStage: String
  institution: String
  clientNotes: String
  facilitatorComments: String
  lastUpdated: AWSDate!
  contactNotes: [ContactNote] @connection(name: "TesterContactNotes")
  sessions: [Session] @connection(name: "TesterSessions")
}

type ContactNote @model {
  id: ID!
  type: String!
  project: Project @connection(name: "ProjectContactNotes")
  date: AWSDate!
  contactedBy: String!
  note: String!
  tester: Tester @connection(name: "TesterContactNotes")
}

type User @model {
  id: ID!
  email: AWSEmail!
  firstName: String!
  lastName: String!
}
